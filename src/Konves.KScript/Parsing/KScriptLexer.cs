//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.5.3
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\steve\Konves.KScript\src\Konves.KScript.Grammar\KScript.g4 by ANTLR 4.5.3

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Konves.KScript.Parsing {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.5.3")]
[System.CLSCompliant(false)]
internal partial class KScriptLexer : Lexer {
	public const int
		STRING=1, NAMED_TOKEN=2, AND=3, IN=4, BETWEEN=5, NOT=6, NOW=7, NULL=8, 
		OR=9, TRUE=10, FALSE=11, COMMA=12, OPEN_BRACKET=13, CLOSE_BRACKET=14, 
		OPEN_PAREN=15, CLOSE_PAREN=16, NUMBER=17, GT=18, GT_ET=19, LT=20, LT_ET=21, 
		EQ=22, NE=23, WS=24;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"STRING", "NAMED_TOKEN", "AND", "IN", "BETWEEN", "NOT", "NOW", "NULL", 
		"OR", "TRUE", "FALSE", "COMMA", "OPEN_BRACKET", "CLOSE_BRACKET", "OPEN_PAREN", 
		"CLOSE_PAREN", "NUMBER", "GT", "GT_ET", "LT", "LT_ET", "EQ", "NE", "DIGIT", 
		"A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", 
		"O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "WS"
	};


	public KScriptLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		"','", "'['", "']'", "'('", "')'", null, "'>'", "'>='", "'<'", "'<='"
	};
	private static readonly string[] _SymbolicNames = {
		null, "STRING", "NAMED_TOKEN", "AND", "IN", "BETWEEN", "NOT", "NOW", "NULL", 
		"OR", "TRUE", "FALSE", "COMMA", "OPEN_BRACKET", "CLOSE_BRACKET", "OPEN_PAREN", 
		"CLOSE_PAREN", "NUMBER", "GT", "GT_ET", "LT", "LT_ET", "EQ", "NE", "WS"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[System.Obsolete("Use Vocabulary instead.")]
	public static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);

	private static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {
		string[] tokenNames = new string[length];
		for (int i = 0; i < tokenNames.Length; i++) {
			tokenNames[i] = vocabulary.GetLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = vocabulary.GetSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}

		return tokenNames;
	}

	[System.Obsolete]
	public override string[] TokenNames
	{
		get
		{
			return tokenNames;
		}
	}

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "KScript.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2\x1A\x131\b\x1\x4"+
		"\x2\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b"+
		"\x4\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4"+
		"\x10\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15"+
		"\t\x15\x4\x16\t\x16\x4\x17\t\x17\x4\x18\t\x18\x4\x19\t\x19\x4\x1A\t\x1A"+
		"\x4\x1B\t\x1B\x4\x1C\t\x1C\x4\x1D\t\x1D\x4\x1E\t\x1E\x4\x1F\t\x1F\x4 "+
		"\t \x4!\t!\x4\"\t\"\x4#\t#\x4$\t$\x4%\t%\x4&\t&\x4\'\t\'\x4(\t(\x4)\t"+
		")\x4*\t*\x4+\t+\x4,\t,\x4-\t-\x4.\t.\x4/\t/\x4\x30\t\x30\x4\x31\t\x31"+
		"\x4\x32\t\x32\x4\x33\t\x33\x4\x34\t\x34\x3\x2\x3\x2\a\x2l\n\x2\f\x2\xE"+
		"\x2o\v\x2\x3\x2\x3\x2\x3\x2\a\x2t\n\x2\f\x2\xE\x2w\v\x2\x3\x2\x5\x2z\n"+
		"\x2\x3\x3\x3\x3\a\x3~\n\x3\f\x3\xE\x3\x81\v\x3\x3\x3\x3\x3\x3\x4\x3\x4"+
		"\x3\x4\x3\x4\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x6\x5\x8F\n\x5\r\x5\xE"+
		"\x5\x90\x3\x5\x3\x5\x3\x5\x5\x5\x96\n\x5\x3\x6\x3\x6\x3\x6\x3\x6\x3\x6"+
		"\x3\x6\x3\x6\x3\x6\x3\a\x3\a\x3\a\x3\a\x3\b\x3\b\x3\b\x3\b\x3\t\x3\t\x3"+
		"\t\x3\t\x3\t\x3\n\x3\n\x3\n\x3\v\x3\v\x3\v\x3\v\x3\v\x3\f\x3\f\x3\f\x3"+
		"\f\x3\f\x3\f\x3\r\x3\r\x3\xE\x3\xE\x3\xF\x3\xF\x3\x10\x3\x10\x3\x11\x3"+
		"\x11\x3\x12\x6\x12\xC6\n\x12\r\x12\xE\x12\xC7\x3\x12\x3\x12\x6\x12\xCC"+
		"\n\x12\r\x12\xE\x12\xCD\x5\x12\xD0\n\x12\x3\x13\x3\x13\x3\x14\x3\x14\x3"+
		"\x14\x3\x15\x3\x15\x3\x16\x3\x16\x3\x16\x3\x17\x3\x17\x3\x17\x3\x17\x3"+
		"\x17\x3\x17\x5\x17\xE2\n\x17\x3\x18\x3\x18\x3\x18\x3\x18\x3\x18\x3\x18"+
		"\x3\x18\x6\x18\xEB\n\x18\r\x18\xE\x18\xEC\x3\x18\x3\x18\x3\x18\x3\x18"+
		"\x5\x18\xF3\n\x18\x3\x19\x3\x19\x3\x1A\x3\x1A\x3\x1B\x3\x1B\x3\x1C\x3"+
		"\x1C\x3\x1D\x3\x1D\x3\x1E\x3\x1E\x3\x1F\x3\x1F\x3 \x3 \x3!\x3!\x3\"\x3"+
		"\"\x3#\x3#\x3$\x3$\x3%\x3%\x3&\x3&\x3\'\x3\'\x3(\x3(\x3)\x3)\x3*\x3*\x3"+
		"+\x3+\x3,\x3,\x3-\x3-\x3.\x3.\x3/\x3/\x3\x30\x3\x30\x3\x31\x3\x31\x3\x32"+
		"\x3\x32\x3\x33\x3\x33\x3\x34\x6\x34\x12C\n\x34\r\x34\xE\x34\x12D\x3\x34"+
		"\x3\x34\x2\x2\x2\x35\x3\x2\x3\x5\x2\x4\a\x2\x5\t\x2\x6\v\x2\a\r\x2\b\xF"+
		"\x2\t\x11\x2\n\x13\x2\v\x15\x2\f\x17\x2\r\x19\x2\xE\x1B\x2\xF\x1D\x2\x10"+
		"\x1F\x2\x11!\x2\x12#\x2\x13%\x2\x14\'\x2\x15)\x2\x16+\x2\x17-\x2\x18/"+
		"\x2\x19\x31\x2\x2\x33\x2\x2\x35\x2\x2\x37\x2\x2\x39\x2\x2;\x2\x2=\x2\x2"+
		"?\x2\x2\x41\x2\x2\x43\x2\x2\x45\x2\x2G\x2\x2I\x2\x2K\x2\x2M\x2\x2O\x2"+
		"\x2Q\x2\x2S\x2\x2U\x2\x2W\x2\x2Y\x2\x2[\x2\x2]\x2\x2_\x2\x2\x61\x2\x2"+
		"\x63\x2\x2\x65\x2\x2g\x2\x1A\x3\x2!\x3\x2$$\x4\x2))\x80\x80\x4\x2^^\x7F"+
		"\x7F\x5\x2\v\f\xF\xF\"\"\x3\x2\x32;\x4\x2\x43\x43\x63\x63\x4\x2\x44\x44"+
		"\x64\x64\x4\x2\x45\x45\x65\x65\x4\x2\x46\x46\x66\x66\x4\x2GGgg\x4\x2H"+
		"Hhh\x4\x2IIii\x4\x2JJjj\x4\x2KKkk\x4\x2LLll\x4\x2MMmm\x4\x2NNnn\x4\x2"+
		"OOoo\x4\x2PPpp\x4\x2QQqq\x4\x2RRrr\x4\x2SSss\x4\x2TTtt\x4\x2UUuu\x4\x2"+
		"VVvv\x4\x2WWww\x4\x2XXxx\x4\x2YYyy\x4\x2ZZzz\x4\x2[[{{\x4\x2\\\\||\x124"+
		"\x2\x3\x3\x2\x2\x2\x2\x5\x3\x2\x2\x2\x2\a\x3\x2\x2\x2\x2\t\x3\x2\x2\x2"+
		"\x2\v\x3\x2\x2\x2\x2\r\x3\x2\x2\x2\x2\xF\x3\x2\x2\x2\x2\x11\x3\x2\x2\x2"+
		"\x2\x13\x3\x2\x2\x2\x2\x15\x3\x2\x2\x2\x2\x17\x3\x2\x2\x2\x2\x19\x3\x2"+
		"\x2\x2\x2\x1B\x3\x2\x2\x2\x2\x1D\x3\x2\x2\x2\x2\x1F\x3\x2\x2\x2\x2!\x3"+
		"\x2\x2\x2\x2#\x3\x2\x2\x2\x2%\x3\x2\x2\x2\x2\'\x3\x2\x2\x2\x2)\x3\x2\x2"+
		"\x2\x2+\x3\x2\x2\x2\x2-\x3\x2\x2\x2\x2/\x3\x2\x2\x2\x2g\x3\x2\x2\x2\x3"+
		"y\x3\x2\x2\x2\x5{\x3\x2\x2\x2\a\x84\x3\x2\x2\x2\t\x95\x3\x2\x2\x2\v\x97"+
		"\x3\x2\x2\x2\r\x9F\x3\x2\x2\x2\xF\xA3\x3\x2\x2\x2\x11\xA7\x3\x2\x2\x2"+
		"\x13\xAC\x3\x2\x2\x2\x15\xAF\x3\x2\x2\x2\x17\xB4\x3\x2\x2\x2\x19\xBA\x3"+
		"\x2\x2\x2\x1B\xBC\x3\x2\x2\x2\x1D\xBE\x3\x2\x2\x2\x1F\xC0\x3\x2\x2\x2"+
		"!\xC2\x3\x2\x2\x2#\xC5\x3\x2\x2\x2%\xD1\x3\x2\x2\x2\'\xD3\x3\x2\x2\x2"+
		")\xD6\x3\x2\x2\x2+\xD8\x3\x2\x2\x2-\xE1\x3\x2\x2\x2/\xF2\x3\x2\x2\x2\x31"+
		"\xF4\x3\x2\x2\x2\x33\xF6\x3\x2\x2\x2\x35\xF8\x3\x2\x2\x2\x37\xFA\x3\x2"+
		"\x2\x2\x39\xFC\x3\x2\x2\x2;\xFE\x3\x2\x2\x2=\x100\x3\x2\x2\x2?\x102\x3"+
		"\x2\x2\x2\x41\x104\x3\x2\x2\x2\x43\x106\x3\x2\x2\x2\x45\x108\x3\x2\x2"+
		"\x2G\x10A\x3\x2\x2\x2I\x10C\x3\x2\x2\x2K\x10E\x3\x2\x2\x2M\x110\x3\x2"+
		"\x2\x2O\x112\x3\x2\x2\x2Q\x114\x3\x2\x2\x2S\x116\x3\x2\x2\x2U\x118\x3"+
		"\x2\x2\x2W\x11A\x3\x2\x2\x2Y\x11C\x3\x2\x2\x2[\x11E\x3\x2\x2\x2]\x120"+
		"\x3\x2\x2\x2_\x122\x3\x2\x2\x2\x61\x124\x3\x2\x2\x2\x63\x126\x3\x2\x2"+
		"\x2\x65\x128\x3\x2\x2\x2g\x12B\x3\x2\x2\x2im\a$\x2\x2jl\n\x2\x2\x2kj\x3"+
		"\x2\x2\x2lo\x3\x2\x2\x2mk\x3\x2\x2\x2mn\x3\x2\x2\x2np\x3\x2\x2\x2om\x3"+
		"\x2\x2\x2pz\a$\x2\x2qu\a)\x2\x2rt\n\x3\x2\x2sr\x3\x2\x2\x2tw\x3\x2\x2"+
		"\x2us\x3\x2\x2\x2uv\x3\x2\x2\x2vx\x3\x2\x2\x2wu\x3\x2\x2\x2xz\a)\x2\x2"+
		"yi\x3\x2\x2\x2yq\x3\x2\x2\x2z\x4\x3\x2\x2\x2{\x7F\a}\x2\x2|~\n\x4\x2\x2"+
		"}|\x3\x2\x2\x2~\x81\x3\x2\x2\x2\x7F}\x3\x2\x2\x2\x7F\x80\x3\x2\x2\x2\x80"+
		"\x82\x3\x2\x2\x2\x81\x7F\x3\x2\x2\x2\x82\x83\a\x7F\x2\x2\x83\x6\x3\x2"+
		"\x2\x2\x84\x85\x5\x33\x1A\x2\x85\x86\x5M\'\x2\x86\x87\x5\x39\x1D\x2\x87"+
		"\b\x3\x2\x2\x2\x88\x89\x5\x43\"\x2\x89\x8A\x5M\'\x2\x8A\x96\x3\x2\x2\x2"+
		"\x8B\x8C\x5\x43\"\x2\x8C\x8E\x5W,\x2\x8D\x8F\t\x5\x2\x2\x8E\x8D\x3\x2"+
		"\x2\x2\x8F\x90\x3\x2\x2\x2\x90\x8E\x3\x2\x2\x2\x90\x91\x3\x2\x2\x2\x91"+
		"\x92\x3\x2\x2\x2\x92\x93\x5\x43\"\x2\x93\x94\x5M\'\x2\x94\x96\x3\x2\x2"+
		"\x2\x95\x88\x3\x2\x2\x2\x95\x8B\x3\x2\x2\x2\x96\n\x3\x2\x2\x2\x97\x98"+
		"\x5\x35\x1B\x2\x98\x99\x5;\x1E\x2\x99\x9A\x5Y-\x2\x9A\x9B\x5_\x30\x2\x9B"+
		"\x9C\x5;\x1E\x2\x9C\x9D\x5;\x1E\x2\x9D\x9E\x5M\'\x2\x9E\f\x3\x2\x2\x2"+
		"\x9F\xA0\x5M\'\x2\xA0\xA1\x5O(\x2\xA1\xA2\x5Y-\x2\xA2\xE\x3\x2\x2\x2\xA3"+
		"\xA4\x5M\'\x2\xA4\xA5\x5O(\x2\xA5\xA6\x5_\x30\x2\xA6\x10\x3\x2\x2\x2\xA7"+
		"\xA8\x5M\'\x2\xA8\xA9\x5[.\x2\xA9\xAA\x5I%\x2\xAA\xAB\x5I%\x2\xAB\x12"+
		"\x3\x2\x2\x2\xAC\xAD\x5O(\x2\xAD\xAE\x5U+\x2\xAE\x14\x3\x2\x2\x2\xAF\xB0"+
		"\x5Y-\x2\xB0\xB1\x5U+\x2\xB1\xB2\x5[.\x2\xB2\xB3\x5;\x1E\x2\xB3\x16\x3"+
		"\x2\x2\x2\xB4\xB5\x5=\x1F\x2\xB5\xB6\x5\x33\x1A\x2\xB6\xB7\x5I%\x2\xB7"+
		"\xB8\x5W,\x2\xB8\xB9\x5;\x1E\x2\xB9\x18\x3\x2\x2\x2\xBA\xBB\a.\x2\x2\xBB"+
		"\x1A\x3\x2\x2\x2\xBC\xBD\a]\x2\x2\xBD\x1C\x3\x2\x2\x2\xBE\xBF\a_\x2\x2"+
		"\xBF\x1E\x3\x2\x2\x2\xC0\xC1\a*\x2\x2\xC1 \x3\x2\x2\x2\xC2\xC3\a+\x2\x2"+
		"\xC3\"\x3\x2\x2\x2\xC4\xC6\x5\x31\x19\x2\xC5\xC4\x3\x2\x2\x2\xC6\xC7\x3"+
		"\x2\x2\x2\xC7\xC5\x3\x2\x2\x2\xC7\xC8\x3\x2\x2\x2\xC8\xCF\x3\x2\x2\x2"+
		"\xC9\xCB\a\x30\x2\x2\xCA\xCC\x5\x31\x19\x2\xCB\xCA\x3\x2\x2\x2\xCC\xCD"+
		"\x3\x2\x2\x2\xCD\xCB\x3\x2\x2\x2\xCD\xCE\x3\x2\x2\x2\xCE\xD0\x3\x2\x2"+
		"\x2\xCF\xC9\x3\x2\x2\x2\xCF\xD0\x3\x2\x2\x2\xD0$\x3\x2\x2\x2\xD1\xD2\a"+
		"@\x2\x2\xD2&\x3\x2\x2\x2\xD3\xD4\a@\x2\x2\xD4\xD5\a?\x2\x2\xD5(\x3\x2"+
		"\x2\x2\xD6\xD7\a>\x2\x2\xD7*\x3\x2\x2\x2\xD8\xD9\a>\x2\x2\xD9\xDA\a?\x2"+
		"\x2\xDA,\x3\x2\x2\x2\xDB\xE2\a?\x2\x2\xDC\xDD\a?\x2\x2\xDD\xE2\a?\x2\x2"+
		"\xDE\xDF\x5\x43\"\x2\xDF\xE0\x5W,\x2\xE0\xE2\x3\x2\x2\x2\xE1\xDB\x3\x2"+
		"\x2\x2\xE1\xDC\x3\x2\x2\x2\xE1\xDE\x3\x2\x2\x2\xE2.\x3\x2\x2\x2\xE3\xE4"+
		"\a#\x2\x2\xE4\xF3\a?\x2\x2\xE5\xE6\a>\x2\x2\xE6\xF3\a@\x2\x2\xE7\xE8\x5"+
		"\x43\"\x2\xE8\xEA\x5W,\x2\xE9\xEB\t\x5\x2\x2\xEA\xE9\x3\x2\x2\x2\xEB\xEC"+
		"\x3\x2\x2\x2\xEC\xEA\x3\x2\x2\x2\xEC\xED\x3\x2\x2\x2\xED\xEE\x3\x2\x2"+
		"\x2\xEE\xEF\x5M\'\x2\xEF\xF0\x5O(\x2\xF0\xF1\x5Y-\x2\xF1\xF3\x3\x2\x2"+
		"\x2\xF2\xE3\x3\x2\x2\x2\xF2\xE5\x3\x2\x2\x2\xF2\xE7\x3\x2\x2\x2\xF3\x30"+
		"\x3\x2\x2\x2\xF4\xF5\t\x6\x2\x2\xF5\x32\x3\x2\x2\x2\xF6\xF7\t\a\x2\x2"+
		"\xF7\x34\x3\x2\x2\x2\xF8\xF9\t\b\x2\x2\xF9\x36\x3\x2\x2\x2\xFA\xFB\t\t"+
		"\x2\x2\xFB\x38\x3\x2\x2\x2\xFC\xFD\t\n\x2\x2\xFD:\x3\x2\x2\x2\xFE\xFF"+
		"\t\v\x2\x2\xFF<\x3\x2\x2\x2\x100\x101\t\f\x2\x2\x101>\x3\x2\x2\x2\x102"+
		"\x103\t\r\x2\x2\x103@\x3\x2\x2\x2\x104\x105\t\xE\x2\x2\x105\x42\x3\x2"+
		"\x2\x2\x106\x107\t\xF\x2\x2\x107\x44\x3\x2\x2\x2\x108\x109\t\x10\x2\x2"+
		"\x109\x46\x3\x2\x2\x2\x10A\x10B\t\x11\x2\x2\x10BH\x3\x2\x2\x2\x10C\x10D"+
		"\t\x12\x2\x2\x10DJ\x3\x2\x2\x2\x10E\x10F\t\x13\x2\x2\x10FL\x3\x2\x2\x2"+
		"\x110\x111\t\x14\x2\x2\x111N\x3\x2\x2\x2\x112\x113\t\x15\x2\x2\x113P\x3"+
		"\x2\x2\x2\x114\x115\t\x16\x2\x2\x115R\x3\x2\x2\x2\x116\x117\t\x17\x2\x2"+
		"\x117T\x3\x2\x2\x2\x118\x119\t\x18\x2\x2\x119V\x3\x2\x2\x2\x11A\x11B\t"+
		"\x19\x2\x2\x11BX\x3\x2\x2\x2\x11C\x11D\t\x1A\x2\x2\x11DZ\x3\x2\x2\x2\x11E"+
		"\x11F\t\x1B\x2\x2\x11F\\\x3\x2\x2\x2\x120\x121\t\x1C\x2\x2\x121^\x3\x2"+
		"\x2\x2\x122\x123\t\x1D\x2\x2\x123`\x3\x2\x2\x2\x124\x125\t\x1E\x2\x2\x125"+
		"\x62\x3\x2\x2\x2\x126\x127\t\x1F\x2\x2\x127\x64\x3\x2\x2\x2\x128\x129"+
		"\t \x2\x2\x129\x66\x3\x2\x2\x2\x12A\x12C\t\x5\x2\x2\x12B\x12A\x3\x2\x2"+
		"\x2\x12C\x12D\x3\x2\x2\x2\x12D\x12B\x3\x2\x2\x2\x12D\x12E\x3\x2\x2\x2"+
		"\x12E\x12F\x3\x2\x2\x2\x12F\x130\b\x34\x2\x2\x130h\x3\x2\x2\x2\x10\x2"+
		"muy\x7F\x90\x95\xC7\xCD\xCF\xE1\xEC\xF2\x12D\x3\b\x2\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace Konves.KScript.Parsing
